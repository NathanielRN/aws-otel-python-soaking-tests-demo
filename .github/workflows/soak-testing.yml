name: Soak Testing
on:
  # schedule:
  #   - cron: '0 10 * * *' # every day at 10 am UTC: pst 2am
  push:
    branches: [ main ]
env:
  GITHUB_REGISTRY: ghcr.io

jobs:
  test_apps_and_publish_results:
    name: Publish App and Soak Test and Publish Results
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    strategy:
      fail-fast: true
      matrix:
        app-platform: [ flask ]
        # instrumentation-type: [ auto, manual ]
        instrumentation-type: [ auto ]
    env:
      APP_PATH: integration-test-apps/${{ matrix.instrumentation-type}}-instrumentation/${{ matrix.app-platform }}
      IMAGE_SUFFIX: sample-app-${{ matrix.app-platform }}-${{ matrix.instrumentation-type }}-${{ github.sha }}
    steps:
      - uses: actions/checkout@v2
      # Only for manual app
      # - uses: actions/checkout@v2
      #   if: ${{ matrix.instrumentation-type }} == manual
      #   with:
      #     repository: open-telemetry/opentelemetry-python
      #     path: ${{ env.APP_PATH }}/opentelemetry-python-core
      # - uses: actions/checkout@v2
      #   if: ${{ matrix.instrumentation-type }} == manual
      #   with:
      #     repository: open-telemetry/opentelemetry-python-contrib
      #     path: ${{ env.APP_PATH }}/opentelemetry-python-contrib
      # # Learn more: https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions#upgrading-a-workflow-that-accesses-ghcrio
      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Extract metadata (tags, labels) for Docker
        id: docker-image-metadata
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.GITHUB_REGISTRY }}/${{ github.repository }}-${{ env.IMAGE_SUFFIX }}
      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ${{ env.APP_PATH }}
          tags: ${{ steps.docker-image-metadata.outputs.tags }}
          labels: ${{ steps.docker-image-metadata.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
          # role-duration-seconds: 1200
          aws-region: us-west-2
      - name: Run Sample App & OTel Collector + Load Generator
        working-directory: .github/collector
        env:
          INSTANCE_ID: ${{ github.run_id }}-${{ github.run_number }}
          LISTEN_ADDRESS: 0.0.0.0:8080
          APP_IMAGE: ${{ steps.docker-image-metadata.outputs.tags }}
          LOG_GROUP_NAME: ${{ github.repository }}/soak-tests
          LOG_STREAM_NAME: ${{ env.IMAGE_SUFFIX }}
          LOGS_NAMESPACE: ${{ github.repository }}/soak-tests
          HOSTMETRICS_COLLECTION_INTERVAL: 3m
          SOAK_TEST_DURATION: 10m
        run: docker-compose up --abort-on-container-exit
      - name: Get a Snapshot of the CPU Time Soak Test results
        run: aws cloudwatch get-metric-widget-image --metric-widget "{\"metrics\":[[\"${{ github.repository }}/soak-tests\",\"system.cpu.time\",\"state\",\"idle\"],[\"...\",\"system\"],[\"...\",\"user\"],[\"...\",\"interrupt\"],[\"...\",\"wait\"]],\"view\":\"timeSeries\",\"stacked\":false,\"stat\":\"Average\",\"period\":30,\"title\":\"CPU Time Spent In Several CPU Tasks\",\"width\":2043,\"height\":336,\"start\":\"-PT3H\",\"end\":\"P0D\"}" | jq -r '.MetricWidgetImage' | base64 -d > soak-test-snapshots/cpu-time/soak-tests-${{ env.IMAGE_SUFFIX }}.png
      - name: Get a Snapshot of the CPU Load % for 2 Cores Soak Test results
        run: aws cloudwatch get-metric-widget-image --metric-widget "{\"metrics\":[[\"${{ github.repository }}/soak-tests\",\"system.cpu.load_average.15m\",{\"id\":\"m10\",\"visible\":false}],[{\"expression\":\"m10/2\",\"label\":\"Expression1\",\"id\":\"e1\"}]],\"view\":\"timeSeries\",\"stacked\":false,\"stat\":\"Average\",\"period\":30,\"title\":\"CPU Load As a Percentage of 2 Cores\",\"width\":2043,\"height\":250,\"start\":\"-PT3H\",\"end\":\"P0D\"}" | jq -r '.MetricWidgetImage' | base64 -d > soak-test-snapshots/cpu-load/soak-tests-${{ env.IMAGE_SUFFIX }}.png
      - name: Get a Snapshot of the Free Memory Soak Test results
        run: aws cloudwatch get-metric-widget-image --metric-widget "{\"view\":\"timeSeries\",\"stacked\":false,\"stat\":\"Average\",\"period\":30,\"title\":\"Free Memory\",\"metrics\":[[\"${{ github.repository }}/soak-tests\",\"system.memory.usage\",\"state\",\"free\"]],\"width\":2043,\"height\":250,\"start\":\"-PT3H\",\"end\":\"P0D\"}" | jq -r '.MetricWidgetImage' | base64 -d > soak-test-snapshots/free-memory/soak-tests-${{ env.IMAGE_SUFFIX }}.png
      - uses: EndBug/add-and-commit@v7
        with:
          add: soak-test-snapshots
          branch: gh-pages
          message: 'Adding Soak Tests Snapshot'
      - name: Make sure we are back on main branch
        run: /usr/bin/git checkout main
      - name: Prepare Average Benchmark of Soak Test JSON Output
        run: |
          MEMORY_BENCHMARK=$(aws cloudwatch get-metric-statistics --namespace ${{ github.repository }}/soak-tests --metric-name system.cpu.load_average.15m --statistics Average --start-time $(date -u -d '3 hours ago' +%FT%TZ) --end-time $(date -u +%FT%TZ) --period $(expr 60 \* 60 \* 3) --region us-west-2 | jq -r '.Datapoints[] | .Value=.Average/2*100 | {Name: "Soak Test CPU Load AVG", Value, Unit: "Percent"}')
          CPU_LOAD_BENCHMARK=$(aws cloudwatch get-metric-statistics --namespace ${{ github.repository }}/soak-tests --metric-name system.memory.usage --dimension=Name=state,Value=used --statistics Average --start-time $(date -u -d '3 hours ago' +%FT%TZ) --end-time $(date -u +%FT%TZ) --period $(expr 60 \* 60 \* 3) --region us-west-2 | jq -r '.Datapoints[] | {Name: "Soak Test Memory Used AVG", Value: .Average, Unit}')
          jq -n "[$MEMORY_BENCHMARK] + [$CPU_LOAD_BENCHMARK] | {benchmarks: .}" | tee output.json
      - name: Report on benchmark results
        uses: NathanielRN/github-action-benchmark@v1.8.2-alpha3
        with:
          name: Soak Test Benchmarks - sample-app-${{ matrix.app-platform }}-${{ matrix.instrumentation-type }}
          tool: custombenchmark
          output-file-path: output.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          max-items-in-chart: 100
          # Alert with a commit comment on possible performance regression
          alert-threshold: 200%
          # fail-on-alert: true
          # Make a commit on `gh-pages` with benchmarks from previous step
          auto-push: ${{ github.ref == 'refs/heads/main' }}
          gh-pages-branch: gh-pages
          benchmark-data-dir-path: benchmarks